#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Type Governance Pre-commit Hook
echo "üîç Running type governance checks..."

# Check for local type definitions in staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx)$')

if [ -n "$STAGED_FILES" ]; then
  for file in $STAGED_FILES; do
    # Skip TYPE_REGISTRY and governance files
    if echo "$file" | grep -q "TYPE_REGISTRY\|type-governance\|migrate-types"; then
      continue
    fi

    # Check for forbidden patterns
    if grep -qE "^interface\s+\w+|^type\s+\w+\s*=|^enum\s+\w+" "$file"; then
      echo "‚ùå ERROR: Local type definitions found in $file"
      echo "   All types must be defined in src/types/TYPE_REGISTRY.ts"
      exit 1
    fi

    # Check for index signatures
    if grep -q "\[key:\s*string\]" "$file"; then
      echo "‚ùå ERROR: Index signature found in $file"
      echo "   Index signatures are forbidden. Use specific types from TYPE_REGISTRY"
      exit 1
    fi

    # Check for 'any' type
    if grep -qE ":\s*any\b" "$file"; then
      echo "‚ùå ERROR: 'any' type found in $file"
      echo "   The 'any' type is forbidden. Use specific types or 'unknown'"
      exit 1
    fi

    # Check for string prices
    if grep -qE "(price|total|amount|cost|fee):\s*string" "$file"; then
      echo "‚ùå ERROR: String monetary value found in $file"
      echo "   Monetary values must use Core.Money type (number), not string"
      exit 1
    fi
  done

  echo "‚úÖ Type governance checks passed!"
fi

# Run TypeScript type checking
echo "üìù Running TypeScript type check..."
npm run type-check || {
  echo "‚ùå TypeScript type check failed!"
  exit 1
}

echo "‚úÖ All pre-commit checks passed!"