name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if no changes'
        required: false
        default: false
        type: boolean
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'

env:
  DEPLOY_PATH: '/var/www/shop'

jobs:
  deploy:
    name: Deploy Pre-built Files
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Verify Build Directory Exists
        run: |
          if [ ! -d "out" ]; then
            echo "❌ No 'out' directory found - please build locally first and commit the files"
            echo "Run: npm run build && git add out/ && git commit -m 'Add build files' && git push"
            exit 1
          fi

          if [ ! -f "out/index.html" ]; then
            echo "❌ Build incomplete - no index.html found"
            ls -la out/
            exit 1
          fi

          echo "✅ Pre-built files found"
          echo "Build size: $(du -sh out/ | cut -f1)"
          echo "File count: $(find out/ -type f | wc -l)"

      - name: Create Deployment Archive
        run: |
          tar -czf deployment.tar.gz out/
          echo "Archive size: $(du -sh deployment.tar.gz | cut -f1)"

      - name: Upload Files to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT || 22 }}
          source: "deployment.tar.gz"
          target: "/tmp/"
          timeout: 300s

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT || 22 }}
          timeout: 300s
          script: |
            set -e

            echo "🚀 Starting deployment to production server..."

            # Create deployment directory
            sudo mkdir -p ${{ env.DEPLOY_PATH }}

            # Clean previous deployment
            echo "🧹 Cleaning previous deployment..."
            sudo rm -rf ${{ env.DEPLOY_PATH }}/*

            echo "📁 Extracting deployment files..."
            cd /tmp
            tar -xzf deployment.tar.gz

            echo "📋 Moving files to web directory..."
            sudo cp -r out/* ${{ env.DEPLOY_PATH }}/

            echo "🔐 Setting correct permissions..."
            sudo chown -R www-data:www-data ${{ env.DEPLOY_PATH }}
            sudo chmod -R 755 ${{ env.DEPLOY_PATH }}

            echo "🧹 Cleaning up temporary files..."
            rm -f /tmp/deployment.tar.gz
            rm -rf /tmp/out

            echo "✅ Deployment completed successfully!"
            echo "📊 Final stats:"
            echo "  - Files deployed: $(find ${{ env.DEPLOY_PATH }} -type f | wc -l)"
            echo "  - Total size: $(du -sh ${{ env.DEPLOY_PATH }} | cut -f1)"

      - name: Verify Deployment
        run: |
          echo "🔍 Verifying deployment..."
          sleep 5
          HTTP_CODE=$(curl -o /dev/null -s -w "%{http_code}\n" https://shop.agrikoph.com/ || echo "000")

          if [ "$HTTP_CODE" = "200" ]; then
            echo "✅ Deployment verification successful!"
            echo "🌐 Site is accessible at https://shop.agrikoph.com/"
          else
            echo "⚠️  Site returned HTTP $HTTP_CODE"
            echo "🔧 This might be normal if DNS/proxy needs time to update"
          fi

      - name: Deployment Summary
        if: always()
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ✅ Completed" >> $GITHUB_STEP_SUMMARY
          echo "**Deploy Path:** ${{ env.DEPLOY_PATH }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**🌐 Live Site:** https://shop.agrikoph.com/" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Deployment completed at $(date -u)" >> $GITHUB_STEP_SUMMARY