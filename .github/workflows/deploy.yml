name: Deploy to Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create .env.local
      run: |
        echo "NEXT_PUBLIC_WC_API_URL=${{ secrets.NEXT_PUBLIC_WC_API_URL }}" > .env.local
        echo "WC_CONSUMER_KEY=${{ secrets.WC_CONSUMER_KEY }}" >> .env.local
        echo "WC_CONSUMER_SECRET=${{ secrets.WC_CONSUMER_SECRET }}" >> .env.local
        
    - name: Build static export
      run: npm run build
        
    - name: Debug secrets (non-sensitive check)
      run: |
        echo "Checking if secrets are available..."
        if [ -z "${{ secrets.SERVER_HOST }}" ]; then echo "❌ SERVER_HOST is empty"; else echo "✅ SERVER_HOST is set"; fi
        if [ -z "${{ secrets.SERVER_USER }}" ]; then echo "❌ SERVER_USER is empty"; else echo "✅ SERVER_USER is set"; fi
        if [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then echo "❌ SSH_PRIVATE_KEY is empty"; else echo "✅ SSH_PRIVATE_KEY is set"; fi
        if [ -z "${{ secrets.DEPLOY_PATH }}" ]; then echo "❌ DEPLOY_PATH is empty"; else echo "✅ DEPLOY_PATH is set"; fi
        
    - name: Deploy static files to server
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ${{ secrets.DEPLOY_PATH }}
          git pull origin main
          echo "NEXT_PUBLIC_WC_API_URL=${{ secrets.NEXT_PUBLIC_WC_API_URL }}" > .env.local
          echo "WC_CONSUMER_KEY=${{ secrets.WC_CONSUMER_KEY }}" >> .env.local
          echo "WC_CONSUMER_SECRET=${{ secrets.WC_CONSUMER_SECRET }}" >> .env.local
          npm ci --omit=dev
          npm run build
          # Copy static files to web directory
          sudo cp -r out/* /var/www/html/
          # Set proper permissions
          sudo chown -R www-data:www-data /var/www/html/
          sudo chmod -R 755 /var/www/html/