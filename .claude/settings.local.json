{
  "permissions": {
    "allow": [
      "Bash(cmd.exe:*)",
      "Bash(npx create-next-app:*)",
      "Read(//c/Users/Sean/Documents/**)",
      "Bash(npm init:*)",
      "Bash(npm install:*)",
      "Bash(npx tailwindcss init:*)",
      "Bash(npm run dev:*)",
      "Bash(npm uninstall:*)",
      "Bash(copy:*)",
      "WebFetch(domain:agrikoph.com)",
      "Bash(git init:*)",
      "Bash(find:*)",
      "Bash(sed:*)",
      "Bash(npm run build:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run lint)",
      "Bash(scp:*)",
      "Bash(ls:*)",
      "Bash(npm run optimize-images:*)",
      "Bash(npm run image:report:*)",
      "Bash(npm run deploy:smart:*)",
      "Bash(npm run deploy:sync:*)",
      "Bash(npm run deploy:source:*)",
      "Bash(npm run deploy:remote:*)",
      "Bash(ssh:*)",
      "Bash(dir:*)",
      "Bash(curl:*)",
      "WebSearch",
      "WebFetch(domain:zellwk.com)",
      "WebFetch(domain:medium.com)",
      "Bash(rd:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "mcp__github-official__list_workflow_runs",
      "Bash(git push:*)",
      "Bash(npx next start:*)",
      "WebFetch(domain:shop.agrikoph.com)",
      "Bash(node:*)",
      "Bash(taskkill:*)",
      "Bash(npm ls:*)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/pinecone.ts)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/fid-optimizer.ts)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/logger.ts)",
      "Bash(npx tsc:*)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/relationship-discovery.ts)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/bundle-optimizer.ts)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/client-analytics.ts --max-warnings=30)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/client-analytics.ts)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/contextual-search.ts --max-warnings=20)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/contextual-search.ts)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/error-sanitizer.ts --max-warnings=30)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/error-sanitizer.ts)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/memgraph.ts --max-warnings=30)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/memgraph.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/memgraph.ts)",
      "Bash(set ESLINT_USE_FLAT_CONFIG=false)",
      "Bash(npx eslint:*)",
      "Bash(xargs sed:*)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/ab-testing.ts)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/*.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/analytics-collector.ts)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/performance.ts)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/service-worker.ts)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/*.ts --format=compact)",
      "Bash(timeout:*)",
      "Bash(sort:*)",
      "Bash(awk:*)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/session-management.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/jwt-config.ts src/app/layout.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/cache-manager.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/session-management.ts src/lib/memgraph.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/cache-manager.ts src/lib/jwt-config.ts src/lib/session-management.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/jwt-config.ts src/lib/session-management.ts src/app/layout.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/multi-factor-recommendations.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/pinecone.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/woocommerce.ts --max-warnings=30)",
      "Bash(cut:*)",
      "Bash(set NODE_OPTIONS=--trace-warnings)",
      "Bash(set NODE_ENV=development)",
      "Bash(set NEXT_TELEMETRY_DEBUG=1)",
      "Bash(set NEXT_PHASE=phase-production-build)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/SearchAnalyticsDashboard.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/AdvancedAnalyticsDashboard.tsx src/components/SearchAnalyticsDashboard.tsx --max-warnings=0)",
      "Bash(lighthouse:*)",
      "Bash(del srcappfind-usmetadata.ts)",
      "Bash(netstat:*)",
      "Bash(del \"C:\\Users\\Sean\\Documents\\Agriko\\src\\components\\ProductsPageClient.tsx\")",
      "Bash(ren:*)",
      "Bash(for i in {1..5})",
      "Bash(done)",
      "Bash(npm run start:*)",
      "Bash(cat:*)",
      "Bash(npm test:*)",
      "Bash(npm run test:coverage:*)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/unified-config.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/config-compatibility.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/app/api/admin/login/route.ts src/lib/woocommerce.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/RecommendationEngine.tsx src/components/NavbarWrapper.tsx src/components/GraphRecommendations.tsx src/components/ReviewForm.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/ProductsWithFilters.tsx src/components/ProductCard.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/SearchFilters.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/CartDrawer.tsx --max-warnings=0)",
      "Bash(ANALYZE=true npm run build)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/__tests__/cache-manager.test.ts src/lib/__tests__/retry-handler.test.ts --max-warnings=0)",
      "Bash(npx jest:*)",
      "Bash(del:*)",
      "WebFetch(domain:github.com)",
      "Read(//c/Users/Sean/.ssh/**)",
      "mcp__github-official__create_or_update_file",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/performance-queue.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/entity-discovery.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/AutoTrackingProvider.tsx --max-warnings=0)",
      "Bash(npm run lint:*)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/enhanced-webhook-security.ts --max-warnings=0)",
      "Bash(npm cache clean:*)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/client-event-system.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/hooks/useAutoTracking.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/woocommerce.ts --max-warnings=0)",
      "Bash(cmd /c:*)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/AutoTrackingProvider.tsx src/components/ClientOnlyAutoTrackingProvider.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/SimpleTracking.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/ProductCard.tsx src/context/CartContext.tsx src/components/SearchModal.tsx --max-warnings=0)",
      "Bash(nc localhost 3004)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/app/admin --max-warnings=0)",
      "Bash(SKIP_ENV_VALIDATION=true npx next build --no-lint)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/ProductsWithFilters.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/SearchFilters.tsx src/components/ProductsWithFilters.tsx src/components/SearchModal.tsx src/lib/woocommerce.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/*.tsx --format=compact)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/app/about/page.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/app/about/founder-story/page.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/app/about/page.tsx src/app/about/founder-story/page.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/Testimonials.tsx src/app/about/page.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/app/about/page.tsx src/components/Testimonials.tsx --max-warnings=0)",
      "Bash(findstr:*)",
      "Bash(tasklist)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/bundle-optimizer.ts src/lib/performance.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/PerformanceOptimizer.tsx src/lib/session-management.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/app/api/health/route.ts src/lib/startup-validation.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/TrustBadges.tsx src/components/Testimonials.tsx src/components/Breadcrumb.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/semantic-clustering.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/ --format=compact)",
      "Bash(npm start)",
      "Bash(npm start:*)",
      "Bash(npx next:*)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/app/page.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/app/product/[slug]/ProductReviews.tsx --max-warnings=0)",
      "Bash(NODE_ENV=production npm run build)",
      "Bash(wc:*)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/admin-enhancements/*.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/components/business-intelligence/PredictiveAnalyticsDashboard.tsx src/components/business-intelligence/CompetitiveAnalysisWidget.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/app/layout.tsx --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/business-intelligence/engines/predictive-analytics.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/business-intelligence/engines/*.ts --max-warnings=0)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/business-intelligence/services/*.ts src/lib/business-intelligence/engines/*.ts src/lib/business-intelligence/memgraph/*.ts --format=compact --max-warnings=5)",
      "Bash(docker-compose up:*)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/ --ext .js,.jsx,.ts,.tsx --format=compact)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/types/type-safety.ts --max-warnings=0)",
      "Bash(move:*)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint . --ext .js,.jsx,.ts,.tsx --format=compact)",
      "Bash(npx sanity dataset create:*)",
      "Bash(npm run validate-types:*)",
      "Bash(npm run fix-imports:*)",
      "Bash(npx ts-node:*)",
      "Bash(grep:*)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false npx eslint src/lib/money.ts --max-warnings=0)",
      "Bash(npx sanity init:*)",
      "Bash(attrib:*)",
      "mcp__github-official__get_me"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "github-official",
    "context7"
  ]
}